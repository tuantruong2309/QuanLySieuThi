/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BUS.BUS_SUA;
import BUS.BUS_THEM;
import BUS.BUS_TINHTOAN;
import BUS.BUS_XOA;
import BUS.LOADDULIEU;
import DTO.KHUYENMAI;
import DTO.SANPHAM;
import DTO.CTHD;
import DAO.DAO;
import DAO.DAOLogin;
import DAO.KiemTraLoi;
import DTO.KHACHHANG;
import static GUI.GIAODIENCHINH.taochuoi;
import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.*;
import java.util.regex.*;
import javax.swing.ImageIcon;
import javax.swing.JTable;
import javax.swing.Timer;

/**
 *
 * @author MINH TUAN
 */
public class GDBH extends javax.swing.JFrame {
    DefaultTableModel modelgd,modelsp;
    DAOLogin dlg = new DAOLogin();
    public static ArrayList<SANPHAM> list = new ArrayList<>();
    public static ArrayList<CTHD> listcthd = new ArrayList<>();
    public GDBH() {
        initComponents();
        time.setVisible(false);
        setLocationRelativeTo(null);
        setResizable(false);
        modelgd = (DefaultTableModel) tblgiaodien.getModel();
        modelsp = (DefaultTableModel) tbldssp.getModel();
       
        tbldssp.getTableHeader().setBackground(new Color(8,112,150));
        tbldssp.getTableHeader().setOpaque(false);
        tbldssp.getTableHeader().setForeground(Color.WHITE);
        tblgiaodien.getTableHeader().setBackground(new Color(8,112,150));
        tblgiaodien.getTableHeader().setOpaque(false);
        tblgiaodien.getTableHeader().setForeground(Color.WHITE);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        list = new LOADDULIEU().getList();
        /*jScrollPane2.getColumnHeader().setVisible(false);
        jScrollPane2.revalidate();*/
        
        
        tbldssp.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
        tbldssp.getColumn("ẢNH MINH HỌA").setCellRenderer(new LabelRenderer());
        JTableHeader header = tbldssp.getTableHeader();
        ((DefaultTableCellRenderer)header.getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        for(SANPHAM s : list)
        {
            JLabel lb = new JLabel();
            lb.setIcon(Resize("..\\DemoDoAn\\src\\Image\\IMG"+s.getMaSP()+".jpg", 130, 120));
            modelsp.addRow(new Object[]{s.getTenSP(),lb});
        }
        LocListCTHD();
        lbname.setText("Nhân viên : " + GIAODIENCHINH.ttdn.get(0).getHoten());
      
    }
    class LabelRenderer implements TableCellRenderer{
            @Override
            public Component getTableCellRendererComponent(JTable table,Object value,boolean isSelected,boolean hasFocus,int row,int column)
            {
                
                return (Component)value;
            }
    }
    public ImageIcon Resize(String name,int rong,int cao)
    {
        ImageIcon myimg = new ImageIcon(name);
        Image img = myimg.getImage();
        Image newimg = img.getScaledInstance(rong,cao, Image.SCALE_DEFAULT);
        ImageIcon image = new ImageIcon(newimg);
        return image;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        Sua = new javax.swing.JMenuItem();
        Xoa = new javax.swing.JMenuItem();
        panelcolor = new javax.swing.JPanel();
        thanhtien = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbldssp = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblgiaodien = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txttimkiem = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lbClose = new javax.swing.JLabel();
        lbMini = new javax.swing.JLabel();
        mode = new javax.swing.JLabel();
        lbname = new javax.swing.JLabel();
        txtkhachdua = new javax.swing.JTextField();
        tienthoi = new javax.swing.JLabel();
        lbthanhtien = new javax.swing.JLabel();
        lbtienthua = new javax.swing.JLabel();
        lbtiennhan = new javax.swing.JLabel();
        time = new javax.swing.JLabel();
        txtmakh = new javax.swing.JTextField();
        chuy = new javax.swing.JLabel();
        tenkh = new javax.swing.JLabel();
        tktsp = new javax.swing.JLabel();

        Sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/edit.png"))); // NOI18N
        Sua.setText("Sửa");
        Sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SuaActionPerformed(evt);
            }
        });
        popup.add(Sua);
        Sua.getAccessibleContext().setAccessibleName("Sua");

        Xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/bin.png"))); // NOI18N
        Xoa.setText("Xóa");
        Xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XoaActionPerformed(evt);
            }
        });
        popup.add(Xoa);
        Xoa.getAccessibleContext().setAccessibleName("Xoa");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        panelcolor.setBackground(new java.awt.Color(47, 48, 48));
        panelcolor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelcolorMouseDragged(evt);
            }
        });
        panelcolor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelcolorMousePressed(evt);
            }
        });

        thanhtien.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        thanhtien.setForeground(new java.awt.Color(255, 255, 255));
        thanhtien.setText("0");
        thanhtien.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                thanhtienPropertyChange(evt);
            }
        });

        tbldssp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SẢN PHẨM", "ẢNH MINH HỌA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbldssp.setRowHeight(120);
        tbldssp.setShowVerticalLines(false);
        tbldssp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbldsspMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbldssp);
        if (tbldssp.getColumnModel().getColumnCount() > 0) {
            tbldssp.getColumnModel().getColumn(0).setResizable(false);
            tbldssp.getColumnModel().getColumn(0).setPreferredWidth(130);
            tbldssp.getColumnModel().getColumn(1).setMinWidth(130);
            tbldssp.getColumnModel().getColumn(1).setPreferredWidth(130);
            tbldssp.getColumnModel().getColumn(1).setMaxWidth(130);
        }

        tblgiaodien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên sản phẩm", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblgiaodien.setRowHeight(45);
        tblgiaodien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblgiaodienMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblgiaodienMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblgiaodien);

        jLabel1.setBackground(new java.awt.Color(61, 145, 106));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/refre.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        jLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel1KeyPressed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(61, 145, 106));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/plus.png"))); // NOI18N
        jLabel2.setText("Tạo hóa đơn");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.setOpaque(true);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        jLabel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jLabel2KeyPressed(evt);
            }
        });

        txttimkiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txttimkiemKeyReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(47, 48, 48));

        lbClose.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lbClose.setForeground(new java.awt.Color(255, 255, 255));
        lbClose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbClose.setText("X");
        lbClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbCloseMouseExited(evt);
            }
        });

        lbMini.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        lbMini.setForeground(new java.awt.Color(255, 255, 255));
        lbMini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbMini.setText("-");
        lbMini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbMiniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbMiniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbMiniMouseExited(evt);
            }
        });

        mode.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/sun.png"))); // NOI18N
        mode.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                modeMousePressed(evt);
            }
        });

        lbname.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbname.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(mode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbMini, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(lbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbname)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbClose, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbMini, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(mode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbname)
                .addContainerGap())
        );

        txtkhachdua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtkhachduaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtkhachduaKeyReleased(evt);
            }
        });

        tienthoi.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        tienthoi.setForeground(new java.awt.Color(255, 255, 255));
        tienthoi.setText("0");

        lbthanhtien.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbthanhtien.setForeground(new java.awt.Color(255, 255, 255));
        lbthanhtien.setText("Thành tiền");

        lbtienthua.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbtienthua.setForeground(new java.awt.Color(255, 255, 255));
        lbtienthua.setText("Tiền thừa");

        lbtiennhan.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        lbtiennhan.setForeground(new java.awt.Color(255, 255, 255));
        lbtiennhan.setText("Tiền nhận");

        time.setText("night");

        txtmakh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmakhKeyReleased(evt);
            }
        });

        chuy.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        chuy.setForeground(new java.awt.Color(255, 255, 255));
        chuy.setText("Hãy nhập mã KH trước khi tạo hóa đơn");

        tenkh.setForeground(new java.awt.Color(255, 255, 255));

        tktsp.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tktsp.setForeground(new java.awt.Color(255, 255, 255));
        tktsp.setText("Tìm kiếm tên sản phẩm");

        javax.swing.GroupLayout panelcolorLayout = new javax.swing.GroupLayout(panelcolor);
        panelcolor.setLayout(panelcolorLayout);
        panelcolorLayout.setHorizontalGroup(
            panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelcolorLayout.createSequentialGroup()
                .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelcolorLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addComponent(txtmakh, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(tenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chuy))
                        .addGap(157, 157, 157)
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbtiennhan)
                            .addComponent(lbtienthua, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55)
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtkhachdua, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(tienthoi, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(panelcolorLayout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(time))
                    .addGroup(panelcolorLayout.createSequentialGroup()
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(350, 350, 350)
                                .addComponent(lbthanhtien)
                                .addGap(47, 47, 47)
                                .addComponent(thanhtien, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14)
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 337, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tktsp))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelcolorLayout.setVerticalGroup(
            panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelcolorLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelcolorLayout.createSequentialGroup()
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(lbthanhtien))
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(thanhtien, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(4, 4, 4)
                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addComponent(lbtiennhan, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(lbtienthua))
                            .addGroup(panelcolorLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelcolorLayout.createSequentialGroup()
                                        .addComponent(txtkhachdua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(21, 21, 21)
                                        .addComponent(tienthoi, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(panelcolorLayout.createSequentialGroup()
                                        .addComponent(chuy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(panelcolorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtmakh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tenkh, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(panelcolorLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(tktsp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txttimkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(time))
        );

        getContentPane().add(panelcolor);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TinhTong()
    {
        double sum = 0;
        for(CTHD h : listcthd)
        {
            sum+=h.getThanhtien();
        }
        thanhtien.setText(GIAODIENCHINH.vnmoney.format(sum));
    }
    private void LocListCTHD()
    {
        modelgd.setRowCount(0);
        listcthd = new LOADDULIEU().TTGioHang();
        for(CTHD h: listcthd)
        {
              modelgd.addRow(new Object[]{h.getTensp(),h.getSoluong(),GIAODIENCHINH.vnmoney.format(h.getDongia()),GIAODIENCHINH.vnmoney.format(h.getThanhtien())});

        }
        TinhTong();
    }
    DAO d = new DAO();
    public void suaSL(String masp,int conlai)
    {
            if(new BUS_SUA().suasoluongSP(masp, conlai))
            {}
       
    }
    private void tbldsspMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbldsspMouseClicked
        if(evt.getClickCount()==2)
        {
            
            String mua="";
            int giohang=0;
            int i = tbldssp.getSelectedRow();
            
            String ten = String.valueOf(modelsp.getValueAt(i,0));
            for(SANPHAM ak: list)
            {
                if(ak.getTenSP().equals(ten))
                {
                    mua = JOptionPane.showInputDialog(rootPane,"Tên sản phẩm : "+ak.getTenSP()+"\nĐơn giá : "+GIAODIENCHINH.vnmoney.format(ak.getDonGia())+"\nNhập số lượng mua, có sẵn : "+ ak.getSoLuong(),"Thêm vào hóa đơn",JOptionPane.INFORMATION_MESSAGE);
                   
                    giohang = new BUS_TINHTOAN().tongsp(ak.getMaSP());
                    break;
                }
                
            }
             if (mua== null) {
      System.out.println("CANCEL");
    } else if (mua.equals("")) {
      System.out.println("OK");
    } 
    else if(mua.matches("[0-9]{1,}")==false)
    {
          JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
    }
    else {
            
            int mua1 =Integer.parseInt(mua);

            for(SANPHAM sp: list)
            {
                if(sp.getTenSP().equals(ten))
                {
                    
                    if(mua1+giohang>sp.getSoLuong())
                    {
                        JOptionPane.showMessageDialog(rootPane, "Tổng số lượng vượt quá mức có sẵn");
                    }
                    else if(sp.getSoLuong()>=mua1&&mua1>0)
                    {
                    /*chitiethd h = new chitiethd();
                    h.setTensp(ten);
                    h.setMasp(sp.getMaSP());
                    h.setDongia(sp.getDonGia());
                    h.setSoluong(mua1);
                    h.setThanhtien(sp.getDonGia()*mua1);
                    modelgd.addRow(new Object[]{h.getTensp(),h.getSoluong(),giaodien.vnmoney.format(h.getDongia()),giaodien.vnmoney.format(h.getThanhtien())});
                    listcthd.add(h);
                    TinhTong();*/
                    if(new BUS_THEM().ThemGioHang(sp.getMaSP(), mua1))
                    {}
                    LocListCTHD();
                    break;
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "Số lượng không hợp lệ");
                    }
                }
            }
            
           
        
            
            
            
        }
        
            txtkhachduaKeyReleased(null);
        }
       
    }//GEN-LAST:event_tbldsspMouseClicked

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
      
    }//GEN-LAST:event_formMouseReleased

    private void tblgiaodienMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblgiaodienMouseReleased
       if(evt.isPopupTrigger())
       {
           popup.show(this,evt.getX()+30,evt.getY()+100);
       }
    }//GEN-LAST:event_tblgiaodienMouseReleased

    private void tblgiaodienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblgiaodienMouseClicked
    
    }//GEN-LAST:event_tblgiaodienMouseClicked

    private void XoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XoaActionPerformed
        int i = tblgiaodien.getSelectedRow();
        if(i>=0)
        {
        String ten = String.valueOf(modelgd.getValueAt(i,0));
       
        int a = JOptionPane.showConfirmDialog(rootPane, "Xóa sản phẩm : " + ten + " ? ");
        if(a==0)
        {
            
        for(SANPHAM sp:list)
        {
            if(sp.getTenSP().equals(ten))
            {
                 new BUS_XOA().xoa1spkhoiGiohang(sp.getMaSP());
                 LocListCTHD(); 
                break;
            }
        }
           
        }
        }
        else
        {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn dòng để xóa !");
        }
    }//GEN-LAST:event_XoaActionPerformed

    private void SuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SuaActionPerformed
      
        int i = tblgiaodien.getSelectedRow();
       String ten = (String) modelgd.getValueAt(i,0);
       int cosan = 0;
        for(SANPHAM s : list)
        {
            if(s.getTenSP().equals(ten))
            {
                cosan=s.getSoLuong();
                break;
            }
        }
       String sua = JOptionPane.showInputDialog(rootPane, "Nhập số lượng cần sửa ?" + "\n"+ten+"\nCó sẵn : " + cosan);
       int sua1 = Integer.parseInt(sua);
       if(sua!=""&&sua1<=cosan&&sua1>0)
       {
       for(CTHD h : listcthd)
       {
           if(h.getTensp().equals(ten))
           {
               if(new BUS_XOA().xoa1spkhoiGiohang(h.getMasp()))
               {}
               if(new BUS_THEM().ThemGioHang(h.getMasp(), sua1))
               {}
               LocListCTHD();
               JOptionPane.showMessageDialog(rootPane,"Đã sửa");
               break;
           }
       }
       }
       else if(sua==null)
       {
           System.out.println("haha");
       }
       else if(sua1>cosan)
       {
           JOptionPane.showMessageDialog(rootPane,"Số lượng vượt quá mức có sẵn");
       }
       else if(sua1<=0)
       {
           JOptionPane.showMessageDialog(rootPane,"Hãy nhập số lượng hợp lệ !");
       }
        modelgd.setRowCount(0);
        for(CTHD h : listcthd)
        {
             modelgd.addRow(new Object[]{h.getTensp(),h.getSoluong(),GIAODIENCHINH.vnmoney.format(h.getDongia()),GIAODIENCHINH.vnmoney.format(h.getThanhtien())});
        }
        TinhTong();
    }//GEN-LAST:event_SuaActionPerformed
    
    private void jLabel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel2KeyPressed
      
    }//GEN-LAST:event_jLabel2KeyPressed

    private void jLabel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel1KeyPressed
       
    }//GEN-LAST:event_jLabel1KeyPressed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        String makh= "";
        if(tenkh.getText()!=null)
        {
            makh = txtmakh.getText();
        }
        if(listcthd.isEmpty())
            {
                JOptionPane.showMessageDialog(rootPane,"Hóa đơn không được rỗng");
            }
        else
        {
        int xn = JOptionPane.showConfirmDialog(rootPane, "Xác nhận tạo hóa đơn ?");
        if(xn==0)
        {
            String makm = JOptionPane.showInputDialog(rootPane, "Nhập mã khuyến mãi nếu có !", "Khuyến mãi", JOptionPane.INFORMATION_MESSAGE);
            if (makm== null) {
      System.out.println("CANCEL");
    } 
    else
    {
          float phantram = 0;
          boolean comakm =false;
          String tenct="";
          GIAODIENCHINH.listkm = new LOADDULIEU().getListKhuyenMai();
          for(KHUYENMAI km : GIAODIENCHINH.listkm)
          {
              System.out.println(km.getMaKM());
              if(km.getMaKM().equalsIgnoreCase(makm))
              {
                  if(new KiemTraLoi().KT_ThoiGian(km.getNgayBatDau(), km.getNgayKetThuc()))
                  {
                      phantram = km.getPhanTram();
                  tenct = km.getTenCT();
                  System.out.println("Phan tram la " + phantram);
                  comakm=true;
                  break;
                  }
                  else
                  {
                     
                      comakm = false;
                  }
              }
          }
          if(comakm==false)
          {
              JOptionPane.showMessageDialog(panelcolor,"Mã khuyến mãi không tồn tại hoặc hết hạn");
             int a = JOptionPane.showConfirmDialog(rootPane, "Tiếp tục thanh toán ?");
             if(a==0) //yes
             {
                 phantram = 0;
                
                 System.out.println("Phan tram la " + phantram);
              int rd = (int) (Math.random() * ((999999 - 100000) + 1)) + 100000;
            String rd2= String.valueOf(rd);   
            String abb = taochuoi(3) + rd2;
            for(CTHD h : listcthd)
                 {
          int mua = h.getSoluong();
          int cosan = new BUS_TINHTOAN().tongspkho(h.getMasp());
          int conlai =cosan - mua;
          if(new BUS_THEM().TaoHD(h,abb))
          {
              if(new BUS_SUA().suasoluongSP(h.getMasp(), conlai)){}
              
          }
      }
      if(new BUS_THEM().themHD2(listcthd,abb,0,"",makh,GIAODIENCHINH.ttdn.get(0).getManv()))
      {
          JOptionPane.showMessageDialog(rootPane,"Đã tạo hóa đơn mã " + abb);
         
              new BUS_XOA().resetGiohang();
              LocListCTHD();
              list = new LOADDULIEU().getList();
              modelsp.setRowCount(0);
              for(SANPHAM s : list)
        {
            JLabel lb = new JLabel();
            lb.setIcon(Resize("..\\DemoDoAn\\src\\Image\\IMG"+s.getMaSP()+".jpg", 130, 120));
            modelsp.addRow(new Object[]{s.getTenSP(),lb});
        }
      }
      else
      {
          JOptionPane.showMessageDialog(rootPane,"Có lỗi xảy ra");
      }
             }
             else
             {}
          }
         
          else
          {
              JOptionPane.showMessageDialog(panelcolor,"Chúc mừng bạn đã được giảm giá " + phantram +"% trên tổng hóa đơn");
              
              System.out.println("Phan tram la " + phantram);
              int rd = (int) (Math.random() * ((999999 - 100000) + 1)) + 100000;
            String rd2= String.valueOf(rd);   
            String a = taochuoi(3) + rd2;
            for(CTHD h : listcthd)
                 {
          int mua = h.getSoluong();
          int cosan = new BUS_TINHTOAN().tongspkho(h.getMasp());
          int conlai =cosan - mua;
          if(new BUS_THEM().TaoHD(h,a))
          {
              if(new BUS_SUA().suasoluongSP(h.getMasp(), conlai)){}
              
          }
      }
      if(new BUS_THEM().themHD2(listcthd,a,phantram,tenct,makh,GIAODIENCHINH.ttdn.get(0).getManv()))
      {
          JOptionPane.showMessageDialog(rootPane,"Đã tạo hóa đơn mã " + a);
          int rs = JOptionPane.showConfirmDialog(rootPane, "Bạn có muốn reset đơn hàng ?");
          if(rs==0)
          {
              new BUS_XOA().resetGiohang();
              LocListCTHD();
              list = new LOADDULIEU().getList();
          }
      }
      else
      {
          JOptionPane.showMessageDialog(rootPane,"Có lỗi xảy ra");
      }
          }
    }
            
            
            
            
            
        }
        }
        GIAODIENCHINH.LocAll();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        new BUS_XOA().resetGiohang();
        LocListCTHD();
        TinhTong();
        tienthoi.setText("0");
        txtkhachdua.setText("");
    }//GEN-LAST:event_jLabel1MousePressed

    private void lbMiniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniMouseClicked
        this.setExtendedState(GIAODIENCHINH.ICONIFIED);
    }//GEN-LAST:event_lbMiniMouseClicked

    private void lbMiniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniMouseEntered
        lbMini.setForeground(Color.BLACK);
        lbMini.setOpaque(true);
        lbMini.setBackground(Color.WHITE);
    }//GEN-LAST:event_lbMiniMouseEntered

    private void lbMiniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMiniMouseExited
        lbMini.setForeground(Color.WHITE);
        lbMini.setOpaque(false);
        lbMini.setBackground(new Color(61,145,106));
    }//GEN-LAST:event_lbMiniMouseExited

    private void lbCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMouseClicked
        new BUS_XOA().resetGiohang();
        dispose();
    }//GEN-LAST:event_lbCloseMouseClicked

    private void lbCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMouseEntered
        lbClose.setForeground(Color.BLACK);
        lbClose.setOpaque(true);
        lbClose.setBackground(Color.WHITE);
    }//GEN-LAST:event_lbCloseMouseEntered

    private void lbCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbCloseMouseExited
        lbClose.setForeground(Color.WHITE);
        lbClose.setOpaque(false);
        lbClose.setBackground(new Color(61,145,106));
    }//GEN-LAST:event_lbCloseMouseExited
    int mx,my;
    private void panelcolorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelcolorMousePressed
          mx=evt.getX();
       my=evt.getY();
    }//GEN-LAST:event_panelcolorMousePressed

    private void panelcolorMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelcolorMouseDragged
          int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-mx,y-my);
    }//GEN-LAST:event_panelcolorMouseDragged

    private void txttimkiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttimkiemKeyReleased
        String at = txttimkiem.getText();
        
            at=at.trim();
          
            modelsp.setRowCount(0);     
            for(SANPHAM s : list)
            {
                if(s.getTenSP().toLowerCase().contains(at)||s.getTenSP().toUpperCase().contains(at))
                {
                        JLabel lb = new JLabel();
                        lb.setIcon(Resize("..\\DemoDoAn\\src\\Image\\IMG"+s.getMaSP()+".jpg", 130, 120));
                        modelsp.addRow(new Object[]{s.getTenSP(),lb});
                }
            }
    }//GEN-LAST:event_txttimkiemKeyReleased

    private void modeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modeMousePressed
        if(time.getText().equals("day")==false)
       {
        Timer tsa;
        tsa = new Timer(1,new ActionListener() {
            int iday=1;
            boolean run = true;
            public void actionPerformed(ActionEvent e) {
                if(run==true)
                {
                if(iday<=230)
                 {
                 panelcolor.setBackground(new Color(iday,iday,iday));
                 iday++;
                 thanhtien.setForeground(Color.BLACK);
                 lbtiennhan.setForeground(Color.BLACK);
                 lbtienthua.setForeground(Color.BLACK);
                 tienthoi.setForeground(Color.BLACK);
                 lbthanhtien.setForeground(Color.BLACK);
                 chuy.setForeground(Color.BLACK);
                 tenkh.setForeground(Color.BLACK);
                 tktsp.setForeground(Color.BLACK);
                 }
                 else
                 {
                     run=false;
                     time.setText("day");
                     mode.setIcon(new ImageIcon("..\\DemoDoAn\\src\\DoAn\\moon.png"));
                 }
                }
            }
           
        });
        
      
            tsa.start();
       
       }
       if(time.getText().equals("night")==false)
       {
        Timer tsa;
       
        tsa = new Timer(1,new ActionListener() {
             boolean run = true;
             int icolor=255;
            public void actionPerformed(ActionEvent e) {
                if(run==true)
                {
                if(icolor>=0)
                 {
                     if(icolor==48)
                 {
                     panelcolor.setBackground(new Color(icolor-1,icolor,icolor));
                      time.setText("night");
                      thanhtien.setForeground(Color.WHITE);
                 lbtiennhan.setForeground(Color.WHITE);
                 lbtienthua.setForeground(Color.WHITE);
                 tienthoi.setForeground(Color.WHITE);
                 lbthanhtien.setForeground(Color.WHITE);
                 chuy.setForeground(Color.WHITE);
                 tenkh.setForeground(Color.WHITE);
                 tktsp.setForeground(Color.WHITE);
                      mode.setIcon(new ImageIcon("..\\DemoDoAn\\src\\DoAn\\sun.png"));
                     run=false;
                 }
                 panelcolor.setBackground(new Color(icolor,icolor,icolor));
                 icolor--;
                 
                 }
               
                
                }
            }
           
        });

            tsa.start();
        
       } 
    }//GEN-LAST:event_modeMousePressed

    private void txtkhachduaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkhachduaKeyReleased
       /*Double kd = Double.parseDouble(txtkhachdua.getText())*1000;
       if(kd<Double.parseDouble(thanhtien.getText())*1000)
       {
           tienthoi.setText("0");
       }
       else
       {
           tienthoi.setText(String.valueOf(kd-Double.parseDouble(thanhtien.getText())*1000));
       }*/
        /*double sum = 0;
        for(CTHD h : listcthd)
        {
            sum+=h.getThanhtien();
        }
      
        double kd = Double.parseDouble(txtkhachdua.getText());
        if(kd>=sum)
        {
            tienthoi.setText(GIAODIENCHINH.vnmoney.format(kd-sum));
        }
        else
        {
            tienthoi.setText("0");
        }*/
        
    }//GEN-LAST:event_txtkhachduaKeyReleased

    private void thanhtienPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_thanhtienPropertyChange
        
    }//GEN-LAST:event_thanhtienPropertyChange

    private void txtkhachduaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtkhachduaKeyPressed
       if(evt.getKeyCode()==KeyEvent.VK_ENTER)
       {
           if(txtkhachdua.getText().isEmpty())
           {
               JOptionPane.showMessageDialog(null, "Hãy nhập số tiền !");
           }
           else if(txtkhachdua.getText().matches("[0-9]{1,}")==false)
           {
               JOptionPane.showMessageDialog(null, "Số tiền nhập không hợp lệ !");
           }
           else
           {
           double sum = 0;
        for(CTHD h : listcthd)
        {
            sum+=h.getThanhtien();
        }
      
        double kd = Double.parseDouble(txtkhachdua.getText());
        if(kd>=sum)
        {
            tienthoi.setText(GIAODIENCHINH.vnmoney.format(kd-sum));
        }
        else
        {
           JOptionPane.showMessageDialog(null, "Số tiền nhập không hợp lệ ");
        }
           }
       }
       
    }//GEN-LAST:event_txtkhachduaKeyPressed

    private void txtmakhKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmakhKeyReleased
       String ma = txtmakh.getText();
       ArrayList<KHACHHANG> listkh = new ArrayList<>();
       listkh = new LOADDULIEU().getListKhachHang2();
       String name="";
       boolean flag = false;
       for(KHACHHANG kh : listkh)
       {
           if(kh.getMakh().equalsIgnoreCase(ma))
           {
               name = kh.getTenkh();
               flag = true;
               break;
           }
           
       }
       if(flag)
       {
           tenkh.setText(name);
       }
       else
       {
           tenkh.setText(null);
       }
    }//GEN-LAST:event_txtmakhKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GDBH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GDBH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GDBH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GDBH.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GDBH().setVisible(true);
             
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Sua;
    private javax.swing.JMenuItem Xoa;
    private javax.swing.JLabel chuy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbClose;
    private javax.swing.JLabel lbMini;
    private javax.swing.JLabel lbname;
    private javax.swing.JLabel lbthanhtien;
    private javax.swing.JLabel lbtiennhan;
    private javax.swing.JLabel lbtienthua;
    private javax.swing.JLabel mode;
    private javax.swing.JPanel panelcolor;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JTable tbldssp;
    private javax.swing.JTable tblgiaodien;
    private javax.swing.JLabel tenkh;
    private javax.swing.JLabel thanhtien;
    private javax.swing.JLabel tienthoi;
    private javax.swing.JLabel time;
    private javax.swing.JLabel tktsp;
    private javax.swing.JTextField txtkhachdua;
    private javax.swing.JTextField txtmakh;
    private javax.swing.JTextField txttimkiem;
    // End of variables declaration//GEN-END:variables
}
