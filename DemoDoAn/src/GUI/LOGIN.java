/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;


import DAO.DAOLogin;
import DTO.NGUOIDUNG;
import GUI.GIAODIENCHINH;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Admin
 */
public class LOGIN extends javax.swing.JFrame {

    
    public DAOLogin lg = new DAOLogin();
    public LOGIN() {
        initComponents();
        setSize(1179,680);
        this.setResizable(false);
        //pnDangNhap.setFocusable(true);
        setLocationRelativeTo(null);
        setBackground(Color.yellow);
     
        /*if(txtTaiKhoan.getText().isEmpty())
        {
            //txtMatKhau.setEchoChar((char)0);
            txtMatKhau.setText("Mật Khẩu.....");
        } */
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnDangNhap = new javax.swing.JPanel();
        btnDangNhap = new javax.swing.JLabel();
        lbMatKhau = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        HienMatKhau = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbTaiKhoan = new javax.swing.JLabel();
        lbmini = new javax.swing.JLabel();
        lbclose = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        pnDangNhap.setBackground(new java.awt.Color(0, 255, 0));
        pnDangNhap.setOpaque(false);
        pnDangNhap.setLayout(null);

        btnDangNhap.setBackground(new java.awt.Color(0, 102, 255));
        btnDangNhap.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnDangNhap.setForeground(new java.awt.Color(255, 255, 255));
        btnDangNhap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnDangNhap.setText("ĐĂNG NHẬP");
        btnDangNhap.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDangNhap.setOpaque(true);
        btnDangNhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnDangNhapMousePressed(evt);
            }
        });
        btnDangNhap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnDangNhapKeyPressed(evt);
            }
        });
        pnDangNhap.add(btnDangNhap);
        btnDangNhap.setBounds(140, 360, 380, 50);

        lbMatKhau.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbMatKhau.setForeground(new java.awt.Color(255, 0, 0));
        pnDangNhap.add(lbMatKhau);
        lbMatKhau.setBounds(140, 280, 250, 30);

        txtTaiKhoan.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtTaiKhoan.setMargin(new java.awt.Insets(2, 15, 2, 30));
        txtTaiKhoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTaiKhoanActionPerformed(evt);
            }
        });
        txtTaiKhoan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTaiKhoanKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTaiKhoanKeyReleased(evt);
            }
        });
        pnDangNhap.add(txtTaiKhoan);
        txtTaiKhoan.setBounds(140, 120, 380, 50);

        txtMatKhau.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        txtMatKhau.setMargin(new java.awt.Insets(2, 15, 2, 30));
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyReleased(evt);
            }
        });
        pnDangNhap.add(txtMatKhau);
        txtMatKhau.setBounds(140, 230, 380, 50);

        HienMatKhau.setMargin(new java.awt.Insets(0, 0, 0, 0));
        HienMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HienMatKhauActionPerformed(evt);
            }
        });
        pnDangNhap.add(HienMatKhau);
        HienMatKhau.setBounds(140, 310, 25, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Tài khoản");
        pnDangNhap.add(jLabel5);
        jLabel5.setBounds(10, 120, 120, 50);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Mật khẩu");
        pnDangNhap.add(jLabel6);
        jLabel6.setBounds(10, 230, 120, 50);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Hiện mật khẩu");
        pnDangNhap.add(jLabel7);
        jLabel7.setBounds(170, 310, 120, 20);

        lbTaiKhoan.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbTaiKhoan.setForeground(new java.awt.Color(255, 0, 0));
        pnDangNhap.add(lbTaiKhoan);
        lbTaiKhoan.setBounds(140, 160, 250, 40);

        lbmini.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lbmini.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbmini.setText("-");
        lbmini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbminiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbminiMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbminiMousePressed(evt);
            }
        });
        pnDangNhap.add(lbmini);
        lbmini.setBounds(420, 10, 70, 50);

        lbclose.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        lbclose.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbclose.setText("×");
        lbclose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lbcloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lbcloseMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbcloseMousePressed(evt);
            }
        });
        pnDangNhap.add(lbclose);
        lbclose.setBounds(490, 10, 70, 50);

        jPanel1.add(pnDangNhap);
        pnDangNhap.setBounds(610, 0, 570, 460);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DoAn/loginbg.jpg"))); // NOI18N
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        jPanel1.add(jLabel1);
        jLabel1.setBounds(10, 10, 1160, 660);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 1179, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 681, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        
    }//GEN-LAST:event_formKeyPressed

    private void HienMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HienMatKhauActionPerformed
        if(HienMatKhau.isSelected())
        {
            txtMatKhau.setEchoChar((char)0);
        }
        else
        {
            txtMatKhau.setEchoChar('●');
        }
    }//GEN-LAST:event_HienMatKhauActionPerformed

    private void txtMatKhauKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyReleased
        if(txtMatKhau.getText().equals("Mật Khẩu.....") || txtMatKhau.getText().isEmpty())
        {
            lbMatKhau.setText("*Vui lòng nhập mật khẩu...");
        }
        else lbMatKhau.setText("");
    }//GEN-LAST:event_txtMatKhauKeyReleased

    private void txtMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(txtTaiKhoan.getText().isEmpty())
            {
                lbTaiKhoan.setText("*Vui lòng nhập tài khoản");
            }

            else if(txtMatKhau.getText().isEmpty())
            {
                lbMatKhau.setText("*Vui lòng nhập mật khẩu");
            }

            else if(txtMatKhau.getText()!=""&&txtTaiKhoan.getText()!="")
            {
                NGUOIDUNG tt = new NGUOIDUNG();
                tt.setUser(txtTaiKhoan.getText());
                tt.setPass(txtMatKhau.getText());

                if(lg.ktraTaiKhoan(tt)==1)
                {
                      JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
               
                if(tt.getUser().equalsIgnoreCase("admin"))
                {
                    ADMIN ad = new ADMIN();
                    ad.setVisible(true);
                    this.dispose();
                }
                else
                {
                GIAODIENCHINH d = new GIAODIENCHINH();
                d.setVisible(true);
                d.pass = String.valueOf(tt.getUser());
                this.dispose();
                }
                }
                else if(lg.ktraTaiKhoan(tt)==0)
                {
                    JOptionPane.showMessageDialog(rootPane, "Tài khoản hoặc mật khẩu không đúng .");

                }
                else if(lg.ktraTaiKhoan(tt)==2)
                {
                    JOptionPane.showMessageDialog(rootPane, "Tài khoản đang bị khóa");
                }
            }
        }
    }//GEN-LAST:event_txtMatKhauKeyPressed

    private void txtTaiKhoanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaiKhoanKeyReleased
        // TODO add your handling code here:

        if(txtTaiKhoan.getText().trim().equals("Tài Khoản.....") || txtTaiKhoan.getText().trim().isEmpty())
        {
            lbTaiKhoan.setText("*Vui lòng nhập Tài Khoản...");
        }
        else lbTaiKhoan.setText("");
    }//GEN-LAST:event_txtTaiKhoanKeyReleased

    private void txtTaiKhoanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaiKhoanKeyPressed
       if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(txtTaiKhoan.getText().isEmpty())
            {
                lbTaiKhoan.setText("*Vui lòng nhập tài khoản");
            }

            else if(txtMatKhau.getText().isEmpty())
            {
                lbMatKhau.setText("*Vui lòng nhập mật khẩu");
            }

            else if(txtMatKhau.getText()!=""&&txtTaiKhoan.getText()!="")
            {
                NGUOIDUNG tt = new NGUOIDUNG();
                tt.setUser(txtTaiKhoan.getText());
                tt.setPass(txtMatKhau.getText());

                if(lg.ktraTaiKhoan(tt)==1)
                {
                      JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
               
                if(tt.getUser().equalsIgnoreCase("admin"))
                {
                    ADMIN ad = new ADMIN();
                    ad.setVisible(true);
                    this.dispose();
                }
                else
                {
                GIAODIENCHINH d = new GIAODIENCHINH();
                d.setVisible(true);
                d.pass = String.valueOf(tt.getUser());
                this.dispose();
                }
                }
                else if(lg.ktraTaiKhoan(tt)==0)
                {
                    JOptionPane.showMessageDialog(rootPane, "Tài khoản không tồn tại hoặc sai mật khẩu");

                }
                else if(lg.ktraTaiKhoan(tt)==2)
                {
                    JOptionPane.showMessageDialog(rootPane, "Tài khoản đang bị khóa");
                }
            }
        }
    }//GEN-LAST:event_txtTaiKhoanKeyPressed

    private void txtTaiKhoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTaiKhoanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTaiKhoanActionPerformed

    private void btnDangNhapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnDangNhapKeyPressed

    }//GEN-LAST:event_btnDangNhapKeyPressed

    private void btnDangNhapMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDangNhapMousePressed
        // TODO add your handling code here:

        if(txtTaiKhoan.getText().isEmpty())
        {
            lbTaiKhoan.setText("*Vui lòng nhập Tài Khoản");
        }

        else if(txtMatKhau.getText().isEmpty())
        {
            lbMatKhau.setText("*Vui lòng nhập Mật Khẩu");
        }

        else if(txtMatKhau.getText()!=""&&txtTaiKhoan.getText()!="")
        {
            NGUOIDUNG tt = new NGUOIDUNG();
            tt.setUser(txtTaiKhoan.getText());
            tt.setPass(txtMatKhau.getText());

            if(lg.ktraTaiKhoan(tt)==1)
            {
                JOptionPane.showMessageDialog(rootPane, "Đăng nhập thành công");
               
                if(tt.getUser().equalsIgnoreCase("admin"))
                {
                    new ADMIN().setVisible(true);
                    this.dispose();
                }
                else
                {
                GIAODIENCHINH d = new GIAODIENCHINH();
                d.setVisible(true);
                d.pass = String.valueOf(tt.getUser());

                this.dispose();
                }
            }
            else if(lg.ktraTaiKhoan(tt)==0)
            {
                JOptionPane.showMessageDialog(rootPane, "Tài khoản không tồn tại hoặc sai mật khẩu");
            }
            else if(lg.ktraTaiKhoan(tt)==2)
            {
                JOptionPane.showMessageDialog(rootPane, "Tài khoản đang bị khóa");
            }
        }
    }//GEN-LAST:event_btnDangNhapMousePressed

    private void lbcloseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbcloseMousePressed
       System.exit(0);
    }//GEN-LAST:event_lbcloseMousePressed

    private void lbminiMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbminiMousePressed
        this.setExtendedState(GIAODIENCHINH.ICONIFIED);
    }//GEN-LAST:event_lbminiMousePressed

    private void lbminiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbminiMouseEntered
     lbmini.setForeground(Color.BLUE);
    }//GEN-LAST:event_lbminiMouseEntered

    private void lbminiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbminiMouseExited
      lbmini.setForeground(Color.BLACK);
    }//GEN-LAST:event_lbminiMouseExited

    private void lbcloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbcloseMouseEntered
         lbclose.setForeground(Color.RED);
    }//GEN-LAST:event_lbcloseMouseEntered

    private void lbcloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbcloseMouseExited
         lbclose.setForeground(Color.BLACK);
    }//GEN-LAST:event_lbcloseMouseExited
    int mx,my;
    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        this.setLocation(x-mx,y-my);
    }//GEN-LAST:event_jLabel1MouseDragged

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
          mx=evt.getX();
       my=evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LOGIN().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox HienMatKhau;
    private javax.swing.JLabel btnDangNhap;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbMatKhau;
    private javax.swing.JLabel lbTaiKhoan;
    private javax.swing.JLabel lbclose;
    private javax.swing.JLabel lbmini;
    private javax.swing.JPanel pnDangNhap;
    private javax.swing.JPasswordField txtMatKhau;
    public static javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables
}
